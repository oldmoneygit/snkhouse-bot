{
  "permissions": {
    "allow": [
      "Read(//c/Users/PC/Downloads/**)",
      "Bash(npm run build)",
      "Bash(npx vercel:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: implement conversation memory with comprehensive debug logging\n\n- Replace temporary in-memory mode with full database persistence\n- Add conversation history loading and saving for both user and assistant messages\n- Implement 8-stage debug logging to track message flow:\n  1. Duplicate message check\n  2. Customer retrieval/creation\n  3. Conversation retrieval/creation\n  4. User message saving\n  5. History loading with preview\n  6. Message preparation for AI\n  7. AI response generation\n  8. Assistant message saving with verification\n- Add conversation_id consistency checks throughout\n- Verify message count after each save operation\n- Include detailed logging for troubleshooting memory issues\n\nThis fixes the critical bug where the bot was forgetting previous\nmessages in the conversation (e.g., forgetting order number that\nwas just discussed).\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(wc:*)",
      "Bash(head:*)",
      "Bash(git commit:*)",
      "Bash(pnpm add:*)",
      "Bash(npm run dev)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(npm install:*)",
      "Bash(pnpm install)",
      "Bash(mklink:*)",
      "Bash(cmd /c mklink:*)",
      "Bash(powershell:*)",
      "Bash(git mv:*)",
      "Bash(pnpm build)",
      "Bash(pnpm type-check)",
      "Bash(tsc --version)",
      "Bash(pnpm exec tsc:*)",
      "Bash(pnpm --filter @snkhouse/widget build)",
      "Bash(pnpm list:*)",
      "Bash(cat:*)",
      "Bash(pnpm prepare)",
      "Bash(pnpm --filter @snkhouse/admin type-check)",
      "Bash(pnpm --filter @snkhouse/integrations type-check)",
      "Bash(pnpm install:*)",
      "Bash(move WIDGET_BUGS_ANALYSIS.md docswidget_analise )",
      "Bash(move WIDGET_BACKEND_INTEGRATION_ANALYSIS.md docswidget_analise )",
      "Bash(move WIDGET_UI_UX_ACCESSIBILITY_ANALYSIS.md docswidget_analise )",
      "Bash(move WIDGET_VS_WHATSAPP_COMPARISON.md docswidget_analise )",
      "Bash(move WIDGET_IMPROVEMENTS_OPPORTUNITIES.md docswidget_analise )",
      "Bash(move WIDGET_ROADMAP.md docswidget_analise )",
      "Bash(move WIDGET_ANALYSIS_REPORT.md docswidget_analise )",
      "Bash(move WIDGET_ANALYSIS_REPORT_PARTE_1.md docswidget_analise)",
      "Bash(git checkout:*)",
      "Bash(test -f \"C:\\Users\\PC\\Desktop\\Ecossistema_Atendimento_SNKHOUSE\\apps\\widget\\src\\app\\api\\chat\\history\\route.ts\")",
      "Bash(pnpm --filter @snkhouse/widget type-check)",
      "Bash(pnpm dev)",
      "Bash(pnpm --filter @snkhouse/ai-agent build)",
      "Bash(pnpm kill:ports:*)",
      "Bash(node:*)",
      "Bash(pnpm --filter=@snkhouse/ai-agent type-check)",
      "Bash(npx tsc:*)",
      "Bash(test -f \"c:\\Users\\PC\\Desktop\\Ecossistema_Atendimento_SNKHOUSE\\apps\\widget\\src\\app\\api\\chat\\stream\\route.ts\")",
      "Bash(pnpm remove:*)",
      "Bash(curl:*)",
      "Bash(pnpm --filter @snkhouse/analytics type-check)",
      "Bash(chmod:*)",
      "Bash(vercel inspect:*)",
      "Bash(vercel ls:*)",
      "Bash(vercel:*)",
      "Bash(find:*)",
      "Bash(git reset:*)",
      "Bash(test -d \"c:\\Users\\PC\\Desktop\\Ecossistema_Atendimento_SNKHOUSE\\apps\\widget\\node_modules\\next\")",
      "Bash(test:*)",
      "Bash(tree:*)"
    ],
    "deny": [],
    "ask": []
  }
}
